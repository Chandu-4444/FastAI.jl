{"attributes":{"kind":"function","backlinks":[{"tag":"sourcefile","title":"Flux/src/optimise/train.jl","docid":"sourcefiles/Flux/src/optimise/train.jl"},{"tag":"sourcefile","title":"Flux/src/optimise/Optimise.jl","docid":"sourcefiles/Flux/src/optimise/Optimise.jl"}],"methods":[{"line":104,"file":"/home/runner/.julia/packages/Flux/qAdFM/src/optimise/train.jl","method_id":"Flux.Optimise.train!_1","symbol_id":"Flux.Optimise.train!","signature":"train!(loss, ps, data, opt; cb)"}],"name":"train!","title":"train!","symbol_id":"Flux.Optimise.train!","public":true,"module_id":"Flux.Optimise"},"tag":"documentation","children":[{"attributes":{},"tag":"body","children":[{"attributes":{"lang":""},"tag":"codeblock","children":[{"attributes":{},"tag":"CST_DEFINITION","children":[{"attributes":{},"tag":"CST_call","children":[{"attributes":{"reftype":"symbol","document_id":"references/Flux.Optimise.train!"},"tag":"reference","children":[{"mimes":{"text/plain":"train!"}}]},{"attributes":{},"tag":"CST_BRACKET","children":[{"mimes":{"text/plain":"("}}]},{"attributes":{},"tag":"CST_IDENTIFIER","children":[{"mimes":{"text/plain":"loss"}}]},{"attributes":{},"tag":"CST_PUNCTUATION","children":[{"mimes":{"text/plain":", "}}]},{"attributes":{"reftype":"symbol","document_id":"references/Flux.params"},"tag":"reference","children":[{"mimes":{"text/plain":"params"}}]},{"attributes":{},"tag":"CST_PUNCTUATION","children":[{"mimes":{"text/plain":", "}}]},{"attributes":{},"tag":"CST_IDENTIFIER","children":[{"mimes":{"text/plain":"data"}}]},{"attributes":{},"tag":"CST_PUNCTUATION","children":[{"mimes":{"text/plain":", "}}]},{"attributes":{},"tag":"CST_span","children":[{"attributes":{},"tag":"CST_IDENTIFIER","children":[{"mimes":{"text/plain":"opt;"}}]},{"attributes":{},"tag":"CST_whitespace","children":[{"mimes":{"text/plain":" "}}]}]},{"attributes":{},"tag":"CST_parameters","children":[{"attributes":{},"tag":"CST_IDENTIFIER","children":[{"mimes":{"text/plain":"cb"}}]}]},{"attributes":{},"tag":"CST_BRACKET","children":[{"mimes":{"text/plain":")"}}]}]}]}]},{"attributes":{},"tag":"p","children":[{"attributes":{},"tag":"code","children":[{"mimes":{"text/plain":"train!"}}]},{"mimes":{"text/plain":" uses a "}},{"attributes":{},"tag":"code","children":[{"mimes":{"text/plain":"loss"}}]},{"mimes":{"text/plain":" function and training "}},{"attributes":{},"tag":"code","children":[{"mimes":{"text/plain":"data"}}]},{"mimes":{"text/plain":" to improve the"}},{"attributes":{},"tag":"br","children":[]},{"attributes":{"reftype":"document","href":"@ref","title":"","document_id":"references/@ref"},"tag":"reference","children":[{"mimes":{"text/plain":"Model parameters"}}]},{"mimes":{"text/plain":" ("}},{"attributes":{},"tag":"code","children":[{"mimes":{"text/plain":"params"}}]},{"mimes":{"text/plain":") based on a pluggable "}},{"attributes":{"reftype":"document","href":"@ref","title":"","document_id":"references/@ref"},"tag":"reference","children":[{"mimes":{"text/plain":"Optimisers"}}]},{"mimes":{"text/plain":" ("}},{"attributes":{},"tag":"code","children":[{"mimes":{"text/plain":"opt"}}]},{"mimes":{"text/plain":")"}},{"mimes":{"text/plain":"."}}]},{"attributes":{},"tag":"p","children":[{"mimes":{"text/plain":"For each datapoint "}},{"attributes":{},"tag":"code","children":[{"mimes":{"text/plain":"d"}}]},{"mimes":{"text/plain":" in "}},{"attributes":{},"tag":"code","children":[{"mimes":{"text/plain":"data"}}]},{"mimes":{"text/plain":", compute the gradient of  "}},{"attributes":{},"tag":"code","children":[{"mimes":{"text/plain":"loss"}}]},{"mimes":{"text/plain":" with"}},{"attributes":{},"tag":"br","children":[]},{"mimes":{"text/plain":"respect to "}},{"attributes":{},"tag":"code","children":[{"mimes":{"text/plain":"params"}}]},{"mimes":{"text/plain":" through backpropagation and call the optimizer "}},{"attributes":{},"tag":"code","children":[{"mimes":{"text/plain":"opt"}}]},{"mimes":{"text/plain":"."}},{"attributes":{},"tag":"br","children":[]},{"mimes":{"text/plain":"If "}},{"attributes":{},"tag":"code","children":[{"mimes":{"text/plain":"d"}}]},{"mimes":{"text/plain":" is a tuple of arguments to "}},{"attributes":{},"tag":"code","children":[{"mimes":{"text/plain":"loss"}}]},{"mimes":{"text/plain":" call "}},{"attributes":{},"tag":"code","children":[{"mimes":{"text/plain":"loss(d...)"}}]},{"mimes":{"text/plain":", else call "}},{"attributes":{},"tag":"code","children":[{"mimes":{"text/plain":"loss(d)"}}]},{"mimes":{"text/plain":"."}}]},{"attributes":{},"tag":"p","children":[{"mimes":{"text/plain":"To pass trainable parameters, call "}},{"attributes":{"reftype":"document","href":"@ref","title":"","document_id":"references/@ref"},"tag":"reference","children":[{"attributes":{},"tag":"code","children":[{"mimes":{"text/plain":"Flux.params"}}]}]},{"mimes":{"text/plain":" with your model or just the"}},{"attributes":{},"tag":"br","children":[]},{"mimes":{"text/plain":"layers you want to train, like "}},{"attributes":{},"tag":"code","children":[{"mimes":{"text/plain":"train!(loss, params(model), ...)"}}]},{"mimes":{"text/plain":" or "}},{"attributes":{},"tag":"code","children":[{"mimes":{"text/plain":"train!(loss, params(model[1:end-2), ...)"}}]},{"mimes":{"text/plain":" respectively"}},{"mimes":{"text/plain":"."}}]},{"attributes":{},"tag":"p","children":[{"attributes":{"reftype":"document","href":"@ref","title":"","document_id":"references/@ref"},"tag":"reference","children":[{"mimes":{"text/plain":"Callbacks"}}]},{"mimes":{"text/plain":" are given with the keyword argument "}},{"attributes":{},"tag":"code","children":[{"mimes":{"text/plain":"cb"}}]},{"mimes":{"text/plain":"."}},{"mimes":{"text/plain":" For example, this will print "}},{"mimes":{"text/plain":"“"}},{"mimes":{"text/plain":"training"}},{"mimes":{"text/plain":"”"}},{"mimes":{"text/plain":""}},{"attributes":{},"tag":"br","children":[]},{"mimes":{"text/plain":"every 10 seconds (using "}},{"attributes":{"reftype":"document","href":"@ref","title":"","document_id":"references/@ref"},"tag":"reference","children":[{"attributes":{},"tag":"code","children":[{"mimes":{"text/plain":"Flux.throttle"}}]}]},{"mimes":{"text/plain":"):"}},{"attributes":{},"tag":"br","children":[]},{"attributes":{},"tag":"code","children":[{"mimes":{"text/plain":"train!(loss, params, data, opt, cb = throttle(() -> println(\"training\"), 10))"}}]}]},{"attributes":{},"tag":"p","children":[{"mimes":{"text/plain":"The callback can call "}},{"attributes":{"reftype":"document","href":"@ref","title":"","document_id":"references/@ref"},"tag":"reference","children":[{"attributes":{},"tag":"code","children":[{"mimes":{"text/plain":"Flux.stop"}}]}]},{"mimes":{"text/plain":" to interrupt the training loop"}},{"mimes":{"text/plain":"."}}]},{"attributes":{},"tag":"p","children":[{"mimes":{"text/plain":"Multiple optimisers and callbacks can be passed to "}},{"attributes":{},"tag":"code","children":[{"mimes":{"text/plain":"opt"}}]},{"mimes":{"text/plain":" and "}},{"attributes":{},"tag":"code","children":[{"mimes":{"text/plain":"cb"}}]},{"mimes":{"text/plain":" as arrays"}},{"mimes":{"text/plain":"."}}]}]}]}